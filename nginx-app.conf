server {
    # Escuta na porta definida pela variável de ambiente PORT,
    # que o Cloud Run define automaticamente (geralmente 8080).
    listen ${PORT:-8080};
    server_name _;
    # Aceita qualquer nome de host

    # Raiz dos documentos para o Laravel
    root /var/www/html/public;
    index index.php index.html index.htm;

    # Log de acesso e erro (opcional, mas útil para debug)
    # O Cloud Run já coleta stdout/stderr, então podem não ser estritamente necessários aqui
    # access_log /var/log/nginx/application.access.log;
    # error_log /var/log/nginx/application.error.log;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Lidar com erros
    error_page 404 /index.php;

    # Passar scripts PHP para o FastCGI (PHP-FPM)
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # O PHP-FPM geralmente escuta em um socket Unix ou em uma porta TCP.
        # Para este exemplo, vamos assumir que o PHP-FPM (do estágio 'vendor' do Dockerfile)
        # está configurado para escutar em 127.0.0.1:9000.
        # O script entrypoint.sh cuidará de iniciar o PHP-FPM.
        fastcgi_pass 127.0.0.1:9000;

        fastcgi_index index.php;
        include fastcgi_params; # Importa variáveis FastCGI padrão
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param APP_ENV production;
        # Você pode passar outras env vars aqui se necessário
        # mas é melhor configurá-las no Cloud Run
    }

    # Impedir acesso a arquivos .ht
    location ~ /\.ht {
        deny all;
    }
}